%YAML 1.1
---
id: 62a38a9
title: Unclean termination leads to exceptions and segmentation faults
description: >
     When an interrupt signal is issued (Ctrl+C), termination code
     should ensure a clean program exit.
     It was found that some threads outlived the termination code, and
     kept running normally. With the system in an unstable state (half
     terminated, half running), the program ended in a crash, by
     raising exceptions or segmentation faults.
     The reported issue was closed once, with the assignee stating
     that he had found a fix by accident (with no referenced
     commit). It was then reopened, because the bug still persisted
     and manifested less often.
     The fix involved a complete rework of the way threads and
     concurrent code were handled. The initial implementation used
     ecl::Threadable, while the new solution uses a plain
     ecl::Thread. The new solution still uses Boolean flags to
     communicate between threads, but now the main thread uses `join`
     to wait for the worker thread to finish (also synchronizing
     memory).
     In the initial implementation there seems to be no mechanism in
     place to synchronize both threads, which could be the cause for
     the worker thread to remain unaware of termination. With this in
     mind, "Race Condition within a Thread (CWE-366)" is applicable,
     but we will classify the bug in terms of its visible effect.
classification: "CWE-672: Operation on a Resource after Expiration or Release #RESOURCE"
keywords: ['thread-safety', 'concurrency', 'termination']
system: kobuki
severity: error
links: []
bug:
  phase: runtime-operation
  specificity: general-issue
  architectural-location: application-specific code
  application: mobile robot
  task: null
  subsystem: driver
  package: yujinrobot/kobuki/kobuki_driver
  languages:
    - C++
  detected-by: runtime crash
  reported-by: member developer
  issue: https://github.com/yujinrobot/kobuki/issues/23
  time-reported: 2012-04-05 (22:35)
  reproducibility: sometimes
  trace: |
    terminate called after throwing an instance of 'ecl::StandardException'
    what():
    Location : /opt/yujin/unstable/stacks/ecl/ecl_core/ecl_devices/include/ecl/devices/serial_pos.hpp:407
    Flag     : Attempted to work on an invalid object.
    Detail   : The device is not a valid device for writing.
fix:
  repo: https://github.com/yujinrobot/kobuki
  hash: 62a38a99cdfaf511cff1dd9e03b7bb88516f9033
  pull-request: null
  license: ['BSD']
  fix-in: ['kobuki_driver/include/kobuki_driver/kobuki.hpp', 'kobuki_driver/src/driver/kobuki.cpp']
  languages:
    - C++
  time: 2012-04-14 (14:12)
